jobs:
- job: 'Go_Module_BuildTestPackPush'
  displayName: 'Go_Module_BuildTestPackPush'

  variables:
  - group: Sphenic.Build.Agent.Pool.Ubuntu
  - group: Sphenic.Build.Go.Module
  - name: moduleAction
    value: Push
  - name: feedPublish
    value: a13c67ef-9c5b-451c-9e54-67d56dfa8f5f/8884a1a3-8f90-492f-a70e-37fb76a6ca6c
  - name: goModuleName
    value: terratest-helper
  - name: goModuleDirectoryPath
    value: "$(Build.sourcesDirectory)/terratest-helper"
  - name: goModuleDirectoryPathFromSrc
    value: "src/terratest-helper"
  
  pool:
    vmImage: "$(Agent.Pool.Ubuntu.VmImage.Name)"
  
  steps:
  - checkout: self
    clean: true

  - task: GoTool@0
    displayName: "Go - Install - v$(Go.Version)"
    inputs:
      version: "$(Go.Version)"
      goPath: "$(Go.Path)"
      goBin: "$(Go.BinPath)"

  - task: Go@0
    displayName: "Go - Get: '${{ variables.goModuleName }}' module"
    inputs:
      arguments: -v -t -d ./...
      workingDirectory: "${{ variables.goModuleDirectoryPathFromSrc }}"

  - task: Go@0
    displayName: "Go - Build: '${{ variables.goModuleName }}' module"
    inputs:
      command: build
      arguments: -v ./...
      workingDirectory: "${{ variables.goModuleDirectoryPathFromSrc }}"

  - task: Go@0
    displayName: "Go - Mod Vendor: '${{ variables.goModuleName }}' module"
    inputs:
      command: custom
      customCommand: mod
      arguments: vendor
      workingDirectory: "${{ variables.goModuleDirectoryPathFromSrc }}"

  - task: Go@0
    displayName: "Go - Build (Vendor): '${{ variables.goModuleName }}' module"
    inputs:
      command: build
      arguments: -v -mod=vendor ./...
      workingDirectory: "${{ variables.goModuleDirectoryPathFromSrc }}"

#  - task: NuGetCommand@2
#    displayName: NuGet - Pack '${{ variables.goModuleName }}'
#    inputs:
#      command: pack
#      searchPatternPack: "src/${{ variables.goModuleName }}/*.nuspec"
#      versioningScheme: byBuildNumber

#  - task: NuGetCommand@2
#    displayName: NuGet - Push '${{ variables.goModuleName }}'
#    inputs:
#      command: push
#      feedPublish: "${{ variables.feedPublish }}"
